{"ast":null,"code":"var _jsxFileName = \"/home/arjun/study/frontend-challenge/src/components/ShortenUrlForm.jsx\",\n    _s = $RefreshSig$();\n\n/* eslint no-unused-vars: 1 */\nimport React, { useCallback, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ShortenUrlForm = () => {\n  _s();\n\n  const [value, setValue] = useState('');\n  const onChange = useCallback(e => {// TODO: Set the component's new state based on the user's input\n  }, [\n    /* TODO: Add necessary deps */\n  ]);\n  const onSubmit = useCallback(e => {\n    e.preventDefault(); // TODO: shorten url and copy to clipboard\n  }, [\n    /* TODO: necessary deps */\n  ]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"shorten\",\n      children: [\"Url:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Url to shorten\",\n        id: \"shorten\",\n        type: \"text\",\n        value: value,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Shorten and copy URL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ShortenUrlForm, \"q3obL/3nxNQy3QkO4As2jxG/W0M=\");\n\n_c = ShortenUrlForm;\nexport default ShortenUrlForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShortenUrlForm\");","map":{"version":3,"sources":["/home/arjun/study/frontend-challenge/src/components/ShortenUrlForm.jsx"],"names":["React","useCallback","useState","ShortenUrlForm","value","setValue","onChange","e","onSubmit","preventDefault"],"mappings":";;;AAAA;AAEA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAMI,QAAQ,GAAGL,WAAW,CACvBM,CAAD,IAAO,CACH;AACH,GAHuB,EAIxB;AACI;AADJ,GAJwB,CAA5B;AASA,QAAMC,QAAQ,GAAGP,WAAW,CACvBM,CAAD,IAAO;AACHA,IAAAA,CAAC,CAACE,cAAF,GADG,CAEH;AACH,GAJuB,EAKxB;AACI;AADJ,GALwB,CAA5B;AAUA,sBACI;AAAM,IAAA,QAAQ,EAAED,QAAhB;AAAA,4BACI;AAAO,MAAA,OAAO,EAAC,SAAf;AAAA,sCAEI;AACI,QAAA,WAAW,EAAC,gBADhB;AAEI,QAAA,EAAE,EAAC,SAFP;AAGI,QAAA,IAAI,EAAC,MAHT;AAII,QAAA,KAAK,EAAEJ,KAJX;AAKI,QAAA,QAAQ,EAAEE;AALd;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAWI;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,YAXJ,eAaI;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CAvCD;;GAAMH,c;;KAAAA,c;AAyCN,eAAeA,cAAf","sourcesContent":["/* eslint no-unused-vars: 1 */\n\nimport React, { useCallback, useState } from 'react';\n\nconst ShortenUrlForm = () => {\n    const [value, setValue] = useState('');\n\n    const onChange = useCallback(\n        (e) => {\n            // TODO: Set the component's new state based on the user's input\n        },\n        [\n            /* TODO: Add necessary deps */\n        ],\n    );\n\n    const onSubmit = useCallback(\n        (e) => {\n            e.preventDefault();\n            // TODO: shorten url and copy to clipboard\n        },\n        [\n            /* TODO: necessary deps */\n        ],\n    );\n\n    return (\n        <form onSubmit={onSubmit}>\n            <label htmlFor=\"shorten\">\n                Url:\n                <input\n                    placeholder=\"Url to shorten\"\n                    id=\"shorten\"\n                    type=\"text\"\n                    value={value}\n                    onChange={onChange}\n                />\n            </label>\n            <input type=\"submit\" value=\"Shorten and copy URL\" />\n            {/* TODO: show below only when the url has been shortened and copied */}\n            <div>{/* Show shortened url --- copied! */}</div>\n        </form>\n    );\n};\n\nexport default ShortenUrlForm;\n"]},"metadata":{},"sourceType":"module"}